@use 'sass:math';

$prototype-width-unitless: 2560;
$prototype-height-unitless: 1440;

$base-font-size: 16;

/**
 * Grid columns number
 *
 * Number of columns in the grid, it override `$grid-columns` from
 * bootstrap-sass. It means, if you wish, that you can instantiate a grid of 8,
 * for example.
 *
 * @see https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss#L329
 */
$grid-columns: 14;

/**
 * Gutter width
 *
 * Padding between columns. Gets divided in half for the left and right, it
 * overide `$grid-gutter-width` from bootstrap-sass
 *
 * @see http://stackoverflow.com/a/28193872/5091221
 * @see https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss#L331
 */
$grid-gutter-width-unitless: 24;
$grid-gutter-width: ($grid-gutter-width-unitless * 1px);

/**
 * Grid breakpoints
 *
 * Define the minimum dimensions at which your layout will change,
 * adapting to different screen sizes, for use in media queries.
 *
 * @see https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss#L180
 */
$grid-breakpoints: (
	xs: 0,
	sm: 754px,
	md: 992px,
	lg: 1200px,
	hd: 2560px,
);

$position-values: map-merge(
	$position-values,
	(
		auto: auto,
	)
);

$sizes: (
	1em: 1em,
	16px: #{math.div(16, 16)}rem,
	20px: #{math.div(20, 16)}rem,
	24px: #{math.div(24, 16)}rem,
	40px: #{math.div(40, 16)}rem,
	60px: #{math.div(60, 16)}rem,
	120px: #{math.div(120, 16)}rem,
	12\.5: 12.5%,
	20: 20%,
	37\.5: 37.5%,
	60: 60%,
	80: 80%,
	90: 90%,
	100vw: math.div((200 * 0.5) * 100vw, $prototype-width-unitless),
	200vw: math.div((200 * 1) * 100vw, $prototype-width-unitless),
	350vw: math.div((200 * 1.75) * 100vw, $prototype-width-unitless),
	400vw: math.div((200 * 2) * 100vw, $prototype-width-unitless),
	600vw: math.div(200 * 3 * 100vw, $prototype-width-unitless),
	800vw: math.div(200 * 4 * 100vw, $prototype-width-unitless),
	1000vw: math.div(200 * 5 * 100vw, $prototype-width-unitless),
	1200vw: math.div((200 * 6) * 100vw, $prototype-width-unitless),
	1400vw: math.div((200 * 7) * 100vw, $prototype-width-unitless),
	1600vw: math.div((200 * 8) * 100vw, $prototype-width-unitless),
	1800vw: math.div((200 * 9) * 100vw, $prototype-width-unitless),
	1900vw: math.div((200 * 9.5) * 100vw, $prototype-width-unitless),
	2000vw: math.div((200 * 10) * 100vw, $prototype-width-unitless),
	2400vw: math.div((200 * 12) * 100vw, $prototype-width-unitless),
	200vh: math.div(200 * 100vw, $prototype-height-unitless),
	475vh: math.div(475 * 100vw, $prototype-height-unitless),
);

/**
 * Font families
 *
 * All fonts families found in the site are listed here
 *
 * @uses map-get( $font-families, $key ) to retrieve font  familiy value
 * @type map
 */
$font-families: (
	body: "Suisse Int'l",
	title: 'Suisse Works',
);

/**
 * Font weights
 *
 * Each font weight used in the theme.
 *
 * @uses map-get( $font-weights, weights ) to retrieve font weight value
 * @type map
 */
$font-weights: (
	extralight: 100,
	ultralight: 250,
	light: 300,
	book: 350,
	normal: 400,
	regular: 400,
	medium: 500,
	semibold: 600,
	bold: 700,
	extrabold: 800,
	extrablack: 900,
);

$cursors: pointer text auto not-allowed none wait;

$spacers: map-merge(
	$spacers,
	(
		2px: #{math.div(2, $base-font-size)}rem,
		4px: #{math.div(4, $base-font-size)}rem,
		6px: #{math.div(6, $base-font-size)}rem,
		8px: #{math.div(8, $base-font-size)}rem,
		12px: #{math.div(12, $base-font-size)}rem,
		16px: #{math.div(16, $base-font-size)}rem,
		20px: #{math.div(20, $base-font-size)}rem,
		24px: #{math.div(24, $base-font-size)}rem,
		40px: #{math.div(40, $base-font-size)}rem,
		60px: #{math.div(60, $base-font-size)}rem,
		80px: #{math.div(80, $base-font-size)}rem,
		100px: #{math.div(100, $base-font-size)}rem,
		60vh: math.div(60 * 100vh, $prototype-height-unitless),
		120vh: math.div(120 * 100vh, $prototype-height-unitless),
		20vw: math.div(20 * 100vw, $prototype-height-unitless),
		200vh: math.div(200 * 100vw, $prototype-height-unitless),
		100vw: math.div((200 * 0.5) * 100vw, $prototype-width-unitless),
		200vw: math.div((200 * 1) * 100vw, $prototype-width-unitless),
		350vw: math.div((200 * 1.75) * 100vw, $prototype-width-unitless),
		400vw: math.div((200 * 2) * 100vw, $prototype-width-unitless),
		1000vw: math.div((5 * 200) * 100vw, $prototype-width-unitless),
	)
);

$enable-negative-margins: true;
$negative-spacers: if($enable-negative-margins, negativify-map($spacers), null);

$grid-areas: (
	1\/1\/3\/6: unquote('1 / 1 / 3 / 6'),
	1\/1\/3\/10: unquote('1 / 1 / 3 / 10'),
	1\/1\/3\/11: unquote('1 / 1 / 3 / 11'),
	1\/2\/3\/12: unquote('1 / 2 / 3 / 12'),
	2\/2\/3\/7: unquote('2 / 2 / 3 / 7'),
	2\/2\/3\/9: unquote('2 / 2 / 3 / 9'),
	2\/2\/4\/6: unquote('2 / 2 / 4 / 6'),
	2\/2\/4\/7: unquote('2 / 2 / 4 / 7'),
	2\/2\/10\/10: unquote('2 / 2 / 10 / 10'),
	2\/3\/4\/10: unquote('2 / 3 / 4 / 10'),
	2\/9\/2\/10: unquote('2 / 9 / 2 / 10'),
	3\/8\/11\/12: unquote('3 / 8 / 11 / 12'),
	4\/2\/8\/5: unquote('4 / 2 / 8 / 5'),
	4\/3\/5\/7: unquote('4 / 3 / 5 / 7'),
	4\/3\/8\/8: unquote('4 / 3 / 8 / 8'),
	4\/3\/9\/7: unquote('4 / 3 / 9 / 7'),
	4\/3\/10\/7: unquote('4 / 3 / 10 / 7'),
	4\/4\/10\/7: unquote('4 / 4 / 10 / 7'),
	4\/4\/10\/9: unquote('4 / 4 / 10 / 9'),
	4\/5\/8\/9: unquote('4 / 5 / 8 / 9'),
	4\/6\/12\/9: unquote('4 / 6 / 12 / 9'),
	4\/9\/9\/13: unquote('4 / 9 / 9 / 13'),
	5\/2\/6\/5: unquote('5 / 2 / 6 / 5'),
	5\/2\/8\/4: unquote('5 / 2 / 8 / 4'),
	5\/4\/8\/6: unquote('5 / 4 / 8 / 6'),
	6\/1\/10\/6: unquote('6 / 1 / 10 / 6'),
	6\/6\/10\/11: unquote('6 / 6 / 10 / 11'),
	7\/1\/9\/6: unquote('7/ 1 / 9 / 6'),
	7\/2\/8\/11: unquote('7 / 2 / 8 / 11'),
	7\/2\/11\/5: unquote('7 / 2 / 11 / 5'),
	7\/5\/11\/9: unquote('7 / 5 / 11 / 9'),
	7\/6\/9\/11: unquote('7 / 6 / 9 / 11'),
	8\/1\/12\/2: unquote('8 / 1 / 12 / 2'),
	8\/1\/10\/2: unquote('8 / 1 / 10 / 2'),
	8\/2\/10\/3: unquote('8 / 2 / 10 / 3'),
	8\/2\/10\/5: unquote('8 / 2 / 10 / 5'),
	8\/2\/12\/3: unquote('8 / 2 / 12 / 3'),
	8\/2\/12\/10: unquote('8 / 2 / 12 / 10'),
	8\/3\/10\/6: unquote('8 / 3 / 10 / 6'),
	8\/3\/12\/6: unquote('8 / 3 / 12 / 6'),
	9\/1\/10\/7: unquote('9 / 1 / 10 / 7'),
	9\/1\/10\/11: unquote('9 / 1 / 10 / 11'),
	9\/1\/11\/11: unquote('9 / 1 / 11 / 11'),
	9\/2\/10\/5: unquote('9/ 2 / 10 / 5'),
	9\/7\/10\/13: unquote('9 / 7 / 10 / 13'),
	9\/9\/10\/12: unquote('9 / 9 / 10 / 12'),
	10\/1\/11\/11: unquote('10 / 1 / 11 / 11'),
	10\/1\/12\/6: unquote('10 / 1 / 12 / 6'),
	10\/2\/12\/6: unquote('10 / 2 / 12 / 6'),
	10\/3\/12\/7: unquote('10 / 3 / 12 / 7'),
	10\/4\/11\/8: unquote('10 / 4 / 11 / 8'),
	10\/9\/10\/11: unquote('10 / 9 / 10 / 11'),
	11\/2\/12\/9: unquote('11 / 2 / 12 / 9'),
	11\/3\/12\/9: unquote('11 / 3 / 12 / 9'),
	11\/2\/12\/12: unquote('11 / 2 / 12 / 12')
);

$grid-templates: (
	repeat-5-1fr: repeat(5, 1fr),
	repeat-7-1fr: repeat(7, 1fr),
	repeat-8-1fr: repeat(8, 1fr),
	repeat-9-1fr: repeat(9, 1fr),
	repeat-10-1fr: repeat(10, 1fr),
	repeat-11-1fr: repeat(11, 1fr),
	repeat-12-1fr: repeat(12, 1fr),
	repeat-11-1\11fr: repeat(11, percentage(math.div(1, 11))),
);
