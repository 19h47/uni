// bootstrap-custom.scss

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@use 'sass:math';

@import '~bootstrap/scss/functions';
@import '~bootstrap/scss/variables';

@import 'bootstrap-variables';

@import '~bootstrap/scss/mixins';
@import '~bootstrap/scss/root';
@import '~bootstrap/scss/grid';
@import '~bootstrap/scss/utilities';

$utilities: map-merge(
	$utilities,
	(
		'width':
			map-merge(
				map-get($utilities, 'width'),
				(
					responsive: true,
					values: map-merge(map-get(map-get($utilities, 'width'), 'values'), ($sizes)),
				)
			),
		'height':
			map-merge(
				map-get($utilities, 'height'),
				(
					responsive: true,
					values: map-merge(map-get(map-get($utilities, 'height'), 'values'), ($sizes)),
				)
			),
		'min-height': (
			property: min-height,
			class: min-h,
			values: (
				100: 100%,
			),
		),
		'max-width': (
			property: max-width,
			class: mw,
			responsive: true,
			values: (
				100: 100%,
				800vw: math.div((200 * 4) * 100vw, $prototype-width-unitless),
				1200vw: math.div((200 * 6) * 100vw, $prototype-width-unitless),
			),
		),
		'max-height':
			map-merge(
				map-get($utilities, 'max-height'),
				(
					responsive: true,
				)
			),
		'position':
			map-merge(
				map-get($utilities, 'position'),
				(
					responsive: true,
				)
			),
		'object-position': (
			property: object-position,
			values: (
				center: center,
				left-center: left center,
				right-bottom: right bottom,
			),
		),
		'object-fit': (
			property: object-fit,
			values: (
				cover: cover,
				contain: contain,
				scale-down: scale-down,
			),
		),
		'list-style-type': (
			property: list-style-type,
			values: none,
		),
		'z-index': (
			property: z-index,
			responsive: true,
			values: 0 1 2 3 4 5 10 15 20 100,
		),
		'overflow-y': (
			property: overflow-y,
			values: scroll,
		),
		'overflow-x': (
			property: overflow-x,
			values: hidden,
		),
		'border-radius': (
			property: border-radius,
			class: border-radius,
			values: (
				5px: #{math.div(5, 16)}rem,
				'5px-0-0-5px': #{math.div(5, 16)}rem 0 0 #{math.div(5, 16)}rem,
				'0-5px-5px-0': 0 #{math.div(5, 16)}rem #{math.div(5, 16)}rem 0,
			),
		),
		'text-decoration':
			map-merge(
				map-get($utilities, 'text-decoration'),
				(
					state: hover focus,
				)
			),
		'shadow':
			map-merge(
				map-get($utilities, 'shadow'),
				(
					state: active focus,
					values: (
						focus: 0 0 0 0.2rem rgba(228, 228, 228, 0.5),
						active: inset 1px 1px 2px rgba(0, 0, 0, 0.2),
						uni: 2px 2px 3px rgba(0, 0, 0, 0.2),
					),
				)
			),
		'top':
			map-merge(
				map-get($utilities, 'top'),
				(
					responsive: true,
				)
			),
		'end':
			map-merge(
				map-get($utilities, 'end'),
				(
					responsive: true,
				)
			),
		'bottom':
			map-merge(
				map-get($utilities, 'bottom'),
				(
					responsive: true,
				)
			),
		'start':
			map-merge(
				map-get($utilities, 'start'),
				(
					responsive: true,
				)
			),
		'overflow':
			map-merge(
				map-get($utilities, 'overflow'),
				(
					responsive: true,
				)
			),
		'opacity':
			map-merge(
				map-get($utilities, 'opacity'),
				(
					state: disabled,
					values:
						map-merge(
							map-get(map-get($utilities, 'opacity'), 'values'),
							(
								60: 0.6,
							)
						),
				)
			),
		'text-transform': (
			property: text-transform,
			class: text,
			values: lowercase uppercase capitalize none inherit,
		),
		'white-space': (
			property: white-space,
			values: nowrap,
			responsive: true,
		),
		'letter-spacing': (
			property: letter-spacing,
			values: (
				0: 0,
				50: 0.05em,
				60: 0.06em,
				100: 0.1em,
				250: 0.25em,
			),
		),
		'font-family': (
			property: font-family,
			values: $font-families,
			class: ff,
		),
		'font-weight': (
			property: font-weight,
			values: $font-weights,
			class: fw,
		),
		'cursor': (
			state: disabled,
			property: cursor,
			values: $cursors,
		),
		'grid-area': (
			property: grid-area,
			responsive: true,
			values: $grid-areas,
		),
		'grid-row-gap': (
			property: grid-row-gap,
			responsive: true,
			values: (
				0: 0px,
			),
		),
		'grid-column-gap': (
			property: grid-column-gap,
			responsive: true,
			values: (
				0: 0px,
			),
		),
		'grid-auto-rows': (
			property: grid-auto-rows,
			responsive: true,
			values: (
				1fr: 1fr,
			),
		),
		'grid-template-columns': (
			property: grid-template-columns,
			responsive: true,
			values: $grid-templates,
		),
		'grid-template-rows': (
			property: grid-template-rows,
			responsive: true,
			values: $grid-templates,
		),
		'justify-self': (
			responsive: true,
			property: justify-self,
			values: (
				center: center,
			),
		),
		'fill': (
			property: fill,
			state: hover,
			values: (
				current: currentColor,
				'black': black,
			),
		),
		'rotate': (
			property: transform,
			class: rotate,
			responsive: true,
			values: (
				180: rotate(180deg),
				90: rotate(90deg),
				0: rotate(0),
			),
		),
		'origin': (
			property: transform-origin,
			class: origin,
			responsive: true,
			values: center,
		),
		'writing-mode': (
			property: writing-mode,
			responsive: true,
			values: vertical-rl,
		),
		'outline': (
			property: outline,
			state: focus,
			values: none,
		),
		'transition': (
			property: transition,
			values: (
				box-shadow-opacity:
					unquote(
						'box-shadow .3s cubic-bezier(0.19, 1, 0.22, 1), opacity .3s cubic-bezier(0.19, 1, 0.22, 1)'
					),
				box-shadow: unquote('box-shadow 0.3s cubic-bezier(0.19, 1, 0.22, 1)'),
			),
		),
	)
);

.inset-0 {
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

@import '~bootstrap/scss/utilities/api';
