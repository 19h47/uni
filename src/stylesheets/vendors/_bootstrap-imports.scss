// bootstrap-imports.scss

@use 'sass:math';

// Functions come first (so you can manipulate colors, SVGs, calc, etc)
@import '~bootstrap/scss/functions';

// Optional variable overrides here
@import '~bootstrap/scss/variables';

// Variables come next
@import 'bootstrap-variables';

// Optional Sass map overrides here
$theme-colors: $custom-theme-colors;
$colors: ();
$grays: ();

// Include remainder of required parts
@import '~bootstrap/scss/maps';
@import '~bootstrap/scss/mixins';
@import '~bootstrap/scss/root';

// Include any other parts as needed

// Include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import '~bootstrap/scss/utilities';

$utilities: map-merge(
	$utilities,
	(
		'display':
			map-merge(
				map-get($utilities, 'display'),
				(
					class: '',
					values: (
						hidden: none,
						inline: inline,
						inline-block: inline-block,
						block: block,
						grid: grid,
						table: table,
						table-row: table-row,
						table-cell: table-cell,
						flex: flex,
						inline-flex: inline-flex,
					),
				)
			),
		'position':
			map-merge(
				map-get($utilities, 'position'),
				(
					class: '',
					responsive: true,
				)
			),
		'object-position': (
			property: object-position,
			values: (
				center: center,
				left-center: left center,
				right-bottom: right bottom,
			),
		),
		'object-fit': (
			property: object-fit,
			responsive: true,
			values: (
				cover: cover,
				contain: contain,
				scale-down: scale-down,
			),
		),
		'list-style-type': (
			property: list-style-type,
			values: none,
		),
		'z-index': (
			property: z-index,
			class: z,
			responsive: true,
			values: 0 1 2 3 4 5 10 15 20 100,
		),
		'overflow-y': (
			property: overflow-y,
			values: scroll,
		),
		'overflow-x': (
			property: overflow-x,
			values: hidden,
		),
		'shadow':
			map-merge(
				map-get($utilities, 'shadow'),
				(
					state: active focus,
					values: (
						focus: 0 0 0 0.2rem rgba(228, 228, 228, 0.5),
						active: inset 0.0625rem 0.0625rem 0.125rem rgba(0, 0, 0, 0.2),
						uni: 0.125rem 0.125rem 0.1875rem rgba(0, 0, 0, 0.2),
					),
				)
			),
		'top':
			map-merge(
				map-get($utilities, 'top'),
				(
					responsive: true,
				)
			),
		'end':
			map-merge(
				map-get($utilities, 'end'),
				(
					responsive: true,
				)
			),
		'bottom':
			map-merge(
				map-get($utilities, 'bottom'),
				(
					responsive: true,
				)
			),
		'start':
			map-merge(
				map-get($utilities, 'start'),
				(
					responsive: true,
				)
			),
		'overflow':
			map-merge(
				map-get($utilities, 'overflow'),
				(
					responsive: true,
				)
			),
		'opacity':
			map-merge(
				map-get($utilities, 'opacity'),
				(
					state: disabled,
					values:
						map-merge(
							map-get(map-get($utilities, 'opacity'), 'values'),
							(
								60: 0.6,
							)
						),
				)
			),
		'letter-spacing': (
			property: letter-spacing,
			class: 'tracking',
			values: (
				normal: 0,
				wider: 0.05em,
				widest: 0.1em,
			),
		),
		'cursor': (
			state: disabled,
			property: cursor,
			values: $cursors,
		),
		'fill': (
			property: fill,
			state: hover,
			values: (
				current: currentColor,
				'black': black,
			),
		),
		'rotate': (
			property: transform,
			class: rotate,
			responsive: true,
			values: (
				180: rotate(180deg),
				90: rotate(90deg),
				0: rotate(0),
			),
		),
		'origin': (
			property: transform-origin,
			class: origin,
			responsive: true,
			values: center,
		),
		'writing-mode': (
			property: writing-mode,
			responsive: true,
			values: vertical-rl,
		),
		'outline': (
			property: outline,
			state: focus,
			values: none,
		),
		'columns': (
			property: columns,
			responsive: true,
			values: (
				2,
				auto,
			),
		),
		'column-gap': (
			property: column-gap,
			responsive: true,
			values: (
				2\.5: 2.5rem,
				normal: normal,
			),
		),
		'transition': (
			property: transition,
			values: (
				opacity: unquote('.7s opacity cubic-bezier(.19,1,.22,1)'),
				opacity-visibility:
					unquote(
						'opacity .7s cubic-bezier(0.19,1,0.22,1), visibility .7s cubic-bezier(.19,1,.22,1)'
					),
				box-shadow-opacity:
					unquote(
						'box-shadow .7s cubic-bezier(.19,1,.22,1), opacity .7s cubic-bezier(.19,1,.22,1)'
					),
				box-shadow: unquote('box-shadow .7s cubic-bezier(.19,1,.22,1)'),
				transform: unquote('transform .7s cubic-bezier(.19,1,.22,1)'),
			),
		),
		'gap-y': (
			property: row-gap,
			class: gap-y,
			values: $spacers,
		),
		'bg-opacity':
			map-merge(
				map-get($utilities, 'bg-opacity'),
				(
					values:
						map-merge(
							map-get(map-get($utilities, 'bg-opacity'), 'values'),
							(
								97: 0.97,
							)
						),
				)
			),
	)
);

.children\:span\:text-xs span {
	@extend .text-xs;
}

.inset-0 {
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

.inset-x-0 {
	right: 0;
	left: 0;
}

@include media-breakpoint-up(md) {
	.inset-x-md-0 {
		right: 0;
		left: 0;
	}
	.inset-x-md-auto {
		right: auto;
		left: auto;
	}
}

.inset-y-0 {
	top: 0;
	bottom: 0;
}

@include media-breakpoint-up(md) {
	.inset-y-md-0 {
		top: 0;
		bottom: 0;
	}
	.inset-y-md-auto {
		top: auto;
		bottom: auto;
	}
}

.border-spacing-0 {
	border-spacing: 0;
}

@import 'bootstrap.utilities.borders';
@import 'bootstrap.utilities.sizing';
@import 'bootstrap.utilities.text';

@import '~bootstrap/scss/utilities/api';
